#!/bin/bash

#noransom_sync
#09:46 19/12/2023
# ver 0.01


# Verificar se cifs-utils está instalado
if ! command -v mount.cifs &> /dev/null; then
    echo "O programa mount.cifs não está instalado. Por favor, instale antes de prosseguir."
    echo "Para sistemas baseados em Debian/Ubuntu, você pode instalar com: sudo apt install cifs-utils"
    exit 1
fi

# Variáveis das localidades
# sendo localidade 1 a origem dos dados e a localidade 2 o destino dos dados
usuario1="root"
senha1="123456"
host1="192.168.100.163"
caminho1="Dados/Main"
localidade1="//${host1}/${caminho1}"

usuario2="root"
senha2="123456"
host2="192.168.100.162"
caminho2="8preta1/Dados"
localidade2="//${host2}/${caminho2}"

# Pontos de montagem de teste
ponto_montagem_teste1="/mnt/srv1"
ponto_montagem_teste2="/mnt/srv2"

# Verificar se os pontos de montagem existem
if [ ! -d "$ponto_montagem_teste1" ] || [ ! -d "$ponto_montagem_teste2" ]; then
    echo "Os pontos de montagem não existem. Por favor, crie os pontos de montagem antes de prosseguir."
    exit 1
fi

# Função para verificar se a localidade está disponível e montá-la se necessário
verificar_e_montar_localidade() {
    local localidade=$1
    local usuario=$2
    local senha=$3
    local ponto_montagem=$4
    if ! mountpoint -q "$ponto_montagem"; then
        echo "Montando $localidade em $ponto_montagem..."
        # Substitua 'dominio' pelo seu domínio, se aplicável
        mount.cifs "$localidade" "$ponto_montagem" -o username="$usuario",password="$senha"
    fi
}

# Verificar e montar as localidades
verificar_e_montar_localidade "$localidade1" "$usuario1" "$senha1" "$ponto_montagem_teste1"
verificar_e_montar_localidade "$localidade2" "$usuario2" "$senha2" "$ponto_montagem_teste2"

# Verificar o arquivo de controle
# o arquivo de controle deve ficar no local que é a origem dos dados para certificar que a origem não foi corrompida por ramsonware
# o arquivo deve ter o mesmo tipo de acesso e permissao dos arquivos compartilhados para que a detecçao de ataques seja bem sucedida
arquivo_controle="/mnt/srv1/controle.txt"
conteudo_teste="estearquivonaofoialterado"
md5_teste="4fb5aeb052fafcbefdafdaa374df3e44"


if [ -e "$arquivo_controle" ]; then
    conteudo_atual=$(cat "$arquivo_controle")
    md5_atual=$(md5sum "$arquivo_controle" | awk '{print $1}')

#    # Verificar conteúdo e MD5
    if [ "$conteudo_atual" = "$conteudo_teste" ] && [ "$md5_atual" = "$md5_teste" ]; then
        echo "Verificações de conteúdo e MD5 bem-sucedidas. Iniciando rsync..."

        # Comando rsync
        rsync -av --delete "$ponto_montagem_teste1/" "$ponto_montagem_teste2/"

        echo "rsync concluído com sucesso."
    else
        echo "Verificações de conteúdo ou MD5 falharam."
    fi
else
    echo "O arquivo de controle não existe."
fi

# Procedimento para desmontar os pontos de montagem
echo "Desmontando pontos de montagem..."
umount "$ponto_montagem_teste1"
umount "$ponto_montagem_teste2"
echo "Pontos de montagem desmontados com sucesso."
